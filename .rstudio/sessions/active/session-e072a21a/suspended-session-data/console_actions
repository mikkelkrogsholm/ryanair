{
    "data" : [
        "[38;5;250m 8[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-29 [38;5;246m11:25:00[39m   965. Thu   Thu   \n[38;5;250m 9[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-31 [38;5;246m19:10:00[39m   912. Thu   Sat   \n[38;5;250m10[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-09-01 [38;5;246m14:05:00[39m   965. Thu   Sun   \n[38;5;246m# â€¦ with 126 more rows[39m\n",
        "> ",
        "df %>%",
        "+ ",
        "  mutate(time_out = time_out %>%",
        "+ ",
        "           lubridate::ymd_hms(),",
        "+ ",
        "         time_back = time_back %>%",
        "+ ",
        "           lubridate::ymd_hms(),",
        "+ ",
        "         d_out = lubridate::wday(time_out, label = T, week_start = 1),",
        "+ ",
        "         d_back = lubridate::wday(time_back, label = T, week_start = 1),",
        "+ ",
        "         w_out = lubridate::isoweek(time_out),",
        "+ ",
        "         w_back = lubridate::isoweek(time_back)",
        "+ ",
        "         )",
        "[38;5;246m# A tibble: 136 x 7[39m\n   time_out            time_back           amount d_out d_back w_out w_back\n   [3m[38;5;246m<dttm>[39m[23m              [3m[38;5;246m<dttm>[39m[23m               [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<ord>[39m[23m [3m[38;5;246m<ord>[39m[23m  [3m[38;5;246m<dbl>[39m[23m  [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m 1[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-17 [38;5;246m19:10:00[39m  [4m1[24m025. Thu   Sat       33     33\n[38;5;250m 2[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-18 [38;5;246m14:05:00[39m  [4m1[24m001. Thu   Sun       33     33\n",
        "[38;5;250m 3[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-20 [38;5;246m10:50:00[39m   980. Thu   Tue       33     34\n[38;5;250m 4[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-22 [38;5;246m11:25:00[39m   980. Thu   Thu       33     34\n[38;5;250m 5[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-24 [38;5;246m19:10:00[39m   953. Thu   Sat       33     34\n[38;5;250m 6[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-25 [38;5;246m14:05:00[39m  [4m1[24m051. Thu   Sun       33     34\n[38;5;250m 7[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-27 [38;5;246m10:50:00[39m   980. Thu   Tue       33     35\n",
        "[38;5;250m 8[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-29 [38;5;246m11:25:00[39m   965. Thu   Thu       33     35\n[38;5;250m 9[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-08-31 [38;5;246m19:10:00[39m   912. Thu   Sat       33     35\n[38;5;250m10[39m 2019-08-15 [38;5;246m13:40:00[39m 2019-09-01 [38;5;246m14:05:00[39m   965. Thu   Sun       33     35\n[38;5;246m# â€¦ with 126 more rows[39m\n",
        "> ",
        "install.packages(c(\"sugrrants\", \"viridis\"))",
        "Installing packages into â€˜/usr/local/lib/R/site-libraryâ€™\n(as â€˜libâ€™ is unspecified)\n",
        "also installing the dependency â€˜gridExtraâ€™\n\n",
        "trying URL 'https://mran.microsoft.com/snapshot/2019-05-05/src/contrib/gridExtra_2.3.tar.gz'\n",
        "Content type 'application/octet-stream'",
        " length 1062844 bytes (1.0 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 1.0 MB\n\n",
        "trying URL 'https://mran.microsoft.com/snapshot/2019-05-05/src/contrib/sugrrants_0.2.4.tar.gz'\n",
        "Content type 'application/octet-stream'",
        " length 1843074 bytes (1.8 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 1.8 MB\n\n",
        "trying URL 'https://mran.microsoft.com/snapshot/2019-05-05/src/contrib/viridis_0.5.1.tar.gz'\n",
        "Content type 'application/octet-stream'",
        " length 1906320 bytes (1.8 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 1.8 MB\n\n",
        "* installing *source* package â€˜gridExtraâ€™ ...\n",
        "** package â€˜gridExtraâ€™ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** installing vignettes\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n",
        "* DONE (gridExtra)\n",
        "* installing *source* package â€˜sugrrantsâ€™ ...\n",
        "** package â€˜sugrrantsâ€™ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** R\n",
        "** data\n",
        "*** moving datasets to lazyload DB\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "*** copying figures\n",
        "** building package indices\n",
        "** installing vignettes\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n* DONE (sugrrants)\n",
        "* installing *source* package â€˜viridisâ€™ ...\n",
        "** package â€˜viridisâ€™ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "*** copying figures\n",
        "** building package indices\n",
        "** installing vignettes\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n* DONE (viridis)\n",
        "\n",
        "",
        "The downloaded source packages are in\n\tâ€˜/tmp/Rtmpiq7vAK/downloaded_packagesâ€™",
        "",
        "\n",
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(viridis)",
        "Loading required package: viridisLite\n",
        "> ",
        "library(sugrrants)",
        "> ",
        "pedestrian17 <- filter(pedestrian, Year == \"2017\")",
        "> ",
        "pedestrian17",
        "[38;5;246m# A tibble: 19,488 x 10[39m\n   Date_Time           Date        Year Month Mdate Day    Time Sensor_ID Sensor_Name\n   [3m[38;5;246m<dttm>[39m[23m              [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m [3m[38;5;246m<int>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m      \n[38;5;250m 1[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     0        18 Collins Plâ€¦\n",
        "[38;5;250m 2[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     0        13 Flagstaff â€¦\n[38;5;250m 3[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     0         9 Southern Câ€¦\n[38;5;250m 4[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     0         6 Flinders Sâ€¦\n[38;5;250m 5[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     0        25 Melbourne â€¦\n",
        "[38;5;250m 6[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     0        30 Lonsdale Sâ€¦\n[38;5;250m 7[39m 2017-01-01 [38;5;246m01:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     1        18 Collins Plâ€¦\n[38;5;250m 8[39m 2017-01-01 [38;5;246m01:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     1        13 Flagstaff â€¦\n[38;5;250m 9[39m 2017-01-01 [38;5;246m01:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     1         9 Southern Câ€¦\n",
        "[38;5;250m10[39m 2017-01-01 [38;5;246m01:00:00[39m 2017-01-01  [4m2[24m017 Januâ€¦     1 Sundâ€¦     1         6 Flinders Sâ€¦\n[38;5;246m# â€¦ with 19,478 more rows, and 1 more variable: Hourly_Counts [3m[38;5;246m<int>[38;5;246m[23m[39m\n",
        "> ",
        "centre <- pedestrian17 %>% ",
        "+ ",
        "  filter(Sensor_Name == \"Melbourne Convention Exhibition Centre\")",
        "> ",
        "centre_calendar <- centre %>%",
        "+ ",
        "  frame_calendar(x = Time, y = Hourly_Counts, date = Date, calendar = \"monthly\")",
        "Error in loadNamespace(name) : there is no package called â€˜tsibbleâ€™\n",
        "> ",
        "install.packages(\"tsibble\")",
        "Installing package into â€˜/usr/local/lib/R/site-libraryâ€™\n(as â€˜libâ€™ is unspecified)\n",
        "also installing the dependencies â€˜RApiDatetimeâ€™, â€˜anytimeâ€™\n\n",
        "trying URL 'https://mran.microsoft.com/snapshot/2019-05-05/src/contrib/RApiDatetime_0.0.4.tar.gz'\n",
        "Content type 'application/octet-stream'",
        " length 26615 bytes (25 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 25 KB\n\n",
        "trying URL 'https://mran.microsoft.com/snapshot/2019-05-05/src/contrib/anytime_0.3.3.tar.gz'\n",
        "Content type 'application/octet-stream'",
        " length 239266 bytes (233 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 233 KB\n\n",
        "trying URL 'https://mran.microsoft.com/snapshot/2019-05-05/src/contrib/tsibble_0.8.0.tar.gz'\n",
        "Content type 'application/octet-stream'",
        " length 1310797 bytes (1.3 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 1.3 MB\n\n",
        "* installing *source* package â€˜RApiDatetimeâ€™ ...\n",
        "** package â€˜RApiDatetimeâ€™ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** libs\n",
        "gcc -I\"/usr/local/lib/R/include\" -DNDEBUG -I../../inst/include  -I/usr/local/include  -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c attrib.c -o attrib.o\ngcc -I\"/usr/local/lib/R/include\" -DNDEBUG -I../../inst/include  -I/usr/local/include  -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c datetime.c -o datetime.o\ngcc -I\"/usr/local/lib/R/include\" -DNDEBUG -I../../inst/include  -I/usr/local/include  -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c init.c -o init.o\n",
        "gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o RApiDatetime.so attrib.o datetime.o init.o -L/usr/local/lib/R/lib -lR\n",
        "installing to /usr/local/lib/R/site-library/00LOCK-RApiDatetime/00new/RApiDatetime/libs\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** checking absolute paths in shared objects and dynamic libraries\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n* DONE (RApiDatetime)\n",
        "* installing *source* package â€˜anytimeâ€™ ...\n",
        "** package â€˜anytimeâ€™ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** libs\n",
        "g++ -std=gnu++11 -I\"/usr/local/lib/R/include\" -DNDEBUG  -I\"/usr/local/lib/R/site-library/Rcpp/include\" -I\"/usr/local/lib/R/site-library/BH/include\" -I\"/usr/local/lib/R/site-library/RApiDatetime/include\" -I/usr/local/include  -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o\ng++ -std=gnu++11 -I\"/usr/local/lib/R/include\" -DNDEBUG  -I\"/usr/local/lib/R/site-library/Rcpp/include\" -I\"/usr/local/lib/R/site-library/BH/include\" -I\"/usr/local/lib/R/site-library/RApiDatetime/include\" -I/usr/local/include  -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c anytime.cpp -o anytime.o\n",
        "g++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o anytime.so RcppExports.o anytime.o -L/usr/local/lib/R/lib -lR\n",
        "installing to /usr/local/lib/R/site-library/00LOCK-anytime/00new/anytime/libs\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** installing vignettes\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** checking absolute paths in shared objects and dynamic libraries\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n* DONE (anytime)\n",
        "* installing *source* package â€˜tsibbleâ€™ ...\n",
        "** package â€˜tsibbleâ€™ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** libs\n",
        "g++ -std=gnu++11 -I\"/usr/local/lib/R/include\" -DNDEBUG  -I\"/usr/local/lib/R/site-library/Rcpp/include\" -I/usr/local/include  -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o\ng++ -std=gnu++11 -I\"/usr/local/lib/R/include\" -DNDEBUG  -I\"/usr/local/lib/R/site-library/Rcpp/include\" -I/usr/local/include  -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c time-wise.cpp -o time-wise.o\n",
        "g++ -std=gnu++11 -I\"/usr/local/lib/R/include\" -DNDEBUG  -I\"/usr/local/lib/R/site-library/Rcpp/include\" -I/usr/local/include  -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c utils.cpp -o utils.o\ng++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o tsibble.so RcppExports.o time-wise.o utils.o -L/usr/local/lib/R/lib -lR\n",
        "installing to /usr/local/lib/R/site-library/00LOCK-tsibble/00new/tsibble/libs\n",
        "** R\n",
        "** data\n",
        "*** moving datasets to lazyload DB\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "*** copying figures\n",
        "** building package indices\n",
        "** installing vignettes\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** checking absolute paths in shared objects and dynamic libraries\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n* DONE (tsibble)\n",
        "\n",
        "",
        "The downloaded source packages are in\n\tâ€˜/tmp/Rtmpiq7vAK/downloaded_packagesâ€™",
        "",
        "\n",
        "Error in match.arg(method) : 'arg' must be of length 1\n",
        "> ",
        "library(tsibble)",
        "\nAttaching package: â€˜tsibbleâ€™\n\n",
        "The following object is masked from â€˜package:sugrrantsâ€™:\n\n    pedestrian\n\n",
        "The following objects are masked from â€˜package:lubridateâ€™:\n\n    interval, new_interval\n\n",
        "The following object is masked from â€˜package:dplyrâ€™:\n\n    id\n\n",
        "> ",
        "centre_calendar <- centre %>%",
        "+ ",
        "  frame_calendar(x = Time, y = Hourly_Counts, date = Date, calendar = \"monthly\")",
        "> ",
        "centre_calendar",
        "[38;5;246m# A tibble: 2,880 x 12[39m\n   Date_Time           Date        Year Month   Mdate Day    Time Sensor_ID Sensor_Name                Hourly_Counts .Time .Hourly_Counts\n   [3m[38;5;246m<dttm>[39m[23m              [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m   [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m [3m[38;5;246m<int>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m                              [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<dbl>[39m[23m          [3m[38;5;246m<dbl>[39m[23m\n",
        "[38;5;250m 1[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     0        25 Melbourne Convention Exhiâ€¦          [4m2[24m930 0.537          1    \n[38;5;250m 2[39m 2017-01-01 [38;5;246m01:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     1        25 Melbourne Convention Exhiâ€¦          [4m1[24m629 0.540          0.953\n[38;5;250m 3[39m 2017-01-01 [38;5;246m02:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     2        25 Melbourne Convention Exhiâ€¦           550 0.543          0.914\n",
        "[38;5;250m 4[39m 2017-01-01 [38;5;246m03:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     3        25 Melbourne Convention Exhiâ€¦           301 0.546          0.905\n[38;5;250m 5[39m 2017-01-01 [38;5;246m04:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     4        25 Melbourne Convention Exhiâ€¦            99 0.549          0.898\n[38;5;250m 6[39m 2017-01-01 [38;5;246m05:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     5        25 Melbourne Convention Exhiâ€¦            68 0.552          0.897\n",
        "[38;5;250m 7[39m 2017-01-01 [38;5;246m06:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     6        25 Melbourne Convention Exhiâ€¦            81 0.556          0.897\n[38;5;250m 8[39m 2017-01-01 [38;5;246m07:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     7        25 Melbourne Convention Exhiâ€¦            61 0.559          0.897\n[38;5;250m 9[39m 2017-01-01 [38;5;246m08:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     8        25 Melbourne Convention Exhiâ€¦           122 0.562          0.899\n",
        "[38;5;250m10[39m 2017-01-01 [38;5;246m09:00:00[39m 2017-01-01  [4m2[24m017 January     1 Sundâ€¦     9        25 Melbourne Convention Exhiâ€¦           252 0.565          0.903\n[38;5;246m# â€¦ with 2,870 more rows[39m\n",
        "> ",
        "centre_calendar_wday <- centre %>%",
        "+ ",
        "  frame_calendar(x = Time, y = Hourly_Counts, date = Date, calendar = \"monthly\",",
        "+ ",
        "                 scale = \"free_wday\", ncol = 4)",
        "> ",
        "p3 <- ggplot(centre_calendar_wday, ",
        "+ ",
        "             aes(x = .Time, y = .Hourly_Counts, group = Date)) +",
        "+ ",
        "  geom_line()",
        "> ",
        "prettify(p3)",
        "> ",
        "p3",
        "> ",
        "prettify(p3)",
        "> ",
        "centre",
        "[38;5;246m# A tibble: 2,880 x 10[39m\n   Date_Time           Date        Year Month  Mdate Day    Time Sensor_ID Sensor_Name   Hourly_Counts\n   [3m[38;5;246m<dttm>[39m[23m              [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m  [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m [3m[38;5;246m<int>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m                 [3m[38;5;246m<int>[39m[23m\n[38;5;250m 1[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     0        25 Melbourne Coâ€¦          [4m2[24m930\n",
        "[38;5;250m 2[39m 2017-01-01 [38;5;246m01:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     1        25 Melbourne Coâ€¦          [4m1[24m629\n[38;5;250m 3[39m 2017-01-01 [38;5;246m02:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     2        25 Melbourne Coâ€¦           550\n[38;5;250m 4[39m 2017-01-01 [38;5;246m03:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     3        25 Melbourne Coâ€¦           301\n[38;5;250m 5[39m 2017-01-01 [38;5;246m04:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     4        25 Melbourne Coâ€¦            99\n",
        "[38;5;250m 6[39m 2017-01-01 [38;5;246m05:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     5        25 Melbourne Coâ€¦            68\n[38;5;250m 7[39m 2017-01-01 [38;5;246m06:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     6        25 Melbourne Coâ€¦            81\n[38;5;250m 8[39m 2017-01-01 [38;5;246m07:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     7        25 Melbourne Coâ€¦            61\n[38;5;250m 9[39m 2017-01-01 [38;5;246m08:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     8        25 Melbourne Coâ€¦           122\n",
        "[38;5;250m10[39m 2017-01-01 [38;5;246m09:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     9        25 Melbourne Coâ€¦           252\n[38;5;246m# â€¦ with 2,870 more rows[39m\n",
        "> ",
        "df1 <- df %>%",
        "+ ",
        "  mutate(id = 1:n())",
        "> ",
        "df1",
        "[38;5;246m# A tibble: 136 x 4[39m\n   time_out                time_back               amount    id\n   [3m[38;5;246m<chr>[39m[23m                   [3m[38;5;246m<chr>[39m[23m                    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m\n[38;5;250m 1[39m 2019-08-15T13:40:00.000 2019-08-17T19:10:00.000  [4m1[24m025.     1\n[38;5;250m 2[39m 2019-08-15T13:40:00.000 2019-08-18T14:05:00.000  [4m1[24m001.     2\n[38;5;250m 3[39m 2019-08-15T13:40:00.000 2019-08-20T10:50:00.000   980.     3\n",
        "[38;5;250m 4[39m 2019-08-15T13:40:00.000 2019-08-22T11:25:00.000   980.     4\n[38;5;250m 5[39m 2019-08-15T13:40:00.000 2019-08-24T19:10:00.000   953.     5\n[38;5;250m 6[39m 2019-08-15T13:40:00.000 2019-08-25T14:05:00.000  [4m1[24m051.     6\n[38;5;250m 7[39m 2019-08-15T13:40:00.000 2019-08-27T10:50:00.000   980.     7\n[38;5;250m 8[39m 2019-08-15T13:40:00.000 2019-08-29T11:25:00.000   965.     8\n[38;5;250m 9[39m 2019-08-15T13:40:00.000 2019-08-31T19:10:00.000   912.     9\n[38;5;250m10[39m 2019-08-15T13:40:00.000 2019-09-01T14:05:00.000   965.    10\n",
        "[38;5;246m# â€¦ with 126 more rows[39m\n",
        "> ",
        "df1 <- df %>%",
        "+ ",
        "  mutate(id = 1:n()) %>%",
        "+ ",
        "  gather(type, time, -amount, -id)",
        "> ",
        "df1",
        "[38;5;246m# A tibble: 272 x 4[39m\n   amount    id type     time                   \n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m    [3m[38;5;246m<chr>[39m[23m                  \n[38;5;250m 1[39m  [4m1[24m025.     1 time_out 2019-08-15T13:40:00.000\n[38;5;250m 2[39m  [4m1[24m001.     2 time_out 2019-08-15T13:40:00.000\n[38;5;250m 3[39m   980.     3 time_out 2019-08-15T13:40:00.000\n[38;5;250m 4[39m   980.     4 time_out 2019-08-15T13:40:00.000\n",
        "[38;5;250m 5[39m   953.     5 time_out 2019-08-15T13:40:00.000\n[38;5;250m 6[39m  [4m1[24m051.     6 time_out 2019-08-15T13:40:00.000\n[38;5;250m 7[39m   980.     7 time_out 2019-08-15T13:40:00.000\n[38;5;250m 8[39m   965.     8 time_out 2019-08-15T13:40:00.000\n[38;5;250m 9[39m   912.     9 time_out 2019-08-15T13:40:00.000\n[38;5;250m10[39m   965.    10 time_out 2019-08-15T13:40:00.000\n[38;5;246m# â€¦ with 262 more rows[39m\n",
        "> ",
        "centre",
        "[38;5;246m# A tibble: 2,880 x 10[39m\n   Date_Time           Date        Year Month  Mdate Day    Time Sensor_ID Sensor_Name   Hourly_Counts\n   [3m[38;5;246m<dttm>[39m[23m              [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m  [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m [3m[38;5;246m<int>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m                 [3m[38;5;246m<int>[39m[23m\n[38;5;250m 1[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     0        25 Melbourne Coâ€¦          [4m2[24m930\n",
        "[38;5;250m 2[39m 2017-01-01 [38;5;246m01:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     1        25 Melbourne Coâ€¦          [4m1[24m629\n[38;5;250m 3[39m 2017-01-01 [38;5;246m02:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     2        25 Melbourne Coâ€¦           550\n[38;5;250m 4[39m 2017-01-01 [38;5;246m03:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     3        25 Melbourne Coâ€¦           301\n[38;5;250m 5[39m 2017-01-01 [38;5;246m04:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     4        25 Melbourne Coâ€¦            99\n",
        "[38;5;250m 6[39m 2017-01-01 [38;5;246m05:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     5        25 Melbourne Coâ€¦            68\n[38;5;250m 7[39m 2017-01-01 [38;5;246m06:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     6        25 Melbourne Coâ€¦            81\n[38;5;250m 8[39m 2017-01-01 [38;5;246m07:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     7        25 Melbourne Coâ€¦            61\n[38;5;250m 9[39m 2017-01-01 [38;5;246m08:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     8        25 Melbourne Coâ€¦           122\n",
        "[38;5;250m10[39m 2017-01-01 [38;5;246m09:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     9        25 Melbourne Coâ€¦           252\n[38;5;246m# â€¦ with 2,870 more rows[39m\n",
        "> ",
        "df2 <- df1 %>%",
        "+ ",
        "  frame_calendar(x = time, y = amount, date = as.Date(time), calendar = \"monthly\")",
        "Error: `by` can't contain join column `as.Date(time)` which is missing from RHS\n[90mCall `rlang::last_error()` to see a backtrace[39m\n",
        "> ",
        "df1",
        "[38;5;246m# A tibble: 272 x 4[39m\n   amount    id type     time                   \n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m    [3m[38;5;246m<chr>[39m[23m                  \n[38;5;250m 1[39m  [4m1[24m025.     1 time_out 2019-08-15T13:40:00.000\n[38;5;250m 2[39m  [4m1[24m001.     2 time_out 2019-08-15T13:40:00.000\n[38;5;250m 3[39m   980.     3 time_out 2019-08-15T13:40:00.000\n[38;5;250m 4[39m   980.     4 time_out 2019-08-15T13:40:00.000\n",
        "[38;5;250m 5[39m   953.     5 time_out 2019-08-15T13:40:00.000\n[38;5;250m 6[39m  [4m1[24m051.     6 time_out 2019-08-15T13:40:00.000\n[38;5;250m 7[39m   980.     7 time_out 2019-08-15T13:40:00.000\n[38;5;250m 8[39m   965.     8 time_out 2019-08-15T13:40:00.000\n[38;5;250m 9[39m   912.     9 time_out 2019-08-15T13:40:00.000\n[38;5;250m10[39m   965.    10 time_out 2019-08-15T13:40:00.000\n[38;5;246m# â€¦ with 262 more rows[39m\n",
        "> ",
        "df1 <- df %>%",
        "+ ",
        "  mutate(id = 1:n()) %>%",
        "+ ",
        "  gather(type, time, -amount, -id) %>%",
        "+ ",
        "  mutate(date = as_date(time))",
        "> ",
        "df1",
        "[38;5;246m# A tibble: 272 x 5[39m\n   amount    id type     time                    date      \n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m    [3m[38;5;246m<chr>[39m[23m                   [3m[38;5;246m<date>[39m[23m    \n[38;5;250m 1[39m  [4m1[24m025.     1 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 2[39m  [4m1[24m001.     2 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 3[39m   980.     3 time_out 2019-08-15T13:40:00.000 2019-08-15\n",
        "[38;5;250m 4[39m   980.     4 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 5[39m   953.     5 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 6[39m  [4m1[24m051.     6 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 7[39m   980.     7 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 8[39m   965.     8 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 9[39m   912.     9 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m10[39m   965.    10 time_out 2019-08-15T13:40:00.000 2019-08-15\n",
        "[38;5;246m# â€¦ with 262 more rows[39m\n",
        "> ",
        "df2 <- df1 %>%",
        "+ ",
        "  frame_calendar(x = time, y = amount, date = date, calendar = \"monthly\")",
        "Warning messages:\n",
        "1: ",
        "In diff(range(x, na.rm = TRUE)) :",
        " NAs introduced by coercion\n",
        "2: ",
        "In min(x) :",
        " no non-missing arguments to min; returning Inf\n",
        "3: ",
        "In max(x) :",
        " no non-missing arguments to max; returning -Inf\n",
        "> ",
        "df2",
        "[38;5;246m# A tibble: 272 x 7[39m\n   amount    id type     time                    date       .time .amount\n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m    [3m[38;5;246m<chr>[39m[23m                   [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m   [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m 1[39m  [4m1[24m025.     1 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.418\n[38;5;250m 2[39m  [4m1[24m001.     2 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.413\n",
        "[38;5;250m 3[39m   980.     3 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.409\n[38;5;250m 4[39m   980.     4 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.409\n[38;5;250m 5[39m   953.     5 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.404\n[38;5;250m 6[39m  [4m1[24m051.     6 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.423\n[38;5;250m 7[39m   980.     7 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.409\n[38;5;250m 8[39m   965.     8 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.407\n",
        "[38;5;250m 9[39m   912.     9 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.396\n[38;5;250m10[39m   965.    10 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.407\n[38;5;246m# â€¦ with 262 more rows[39m\n",
        "> ",
        "df2 <- df1 %>%",
        "+ ",
        "  frame_calendar(x = time, y = amount, date = date, calendar = \"monthly\",",
        "+ ",
        "                 scale = \"free_wday\", ncol = 4)",
        "There were 12 warnings (use warnings() to see them)",
        "\n",
        "> ",
        "df2",
        "[38;5;246m# A tibble: 272 x 7[39m\n   amount    id type     time                    date       .time .amount\n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m    [3m[38;5;246m<chr>[39m[23m                   [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m   [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m 1[39m  [4m1[24m025.     1 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.426\n[38;5;250m 2[39m  [4m1[24m001.     2 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.421\n",
        "[38;5;250m 3[39m   980.     3 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.417\n[38;5;250m 4[39m   980.     4 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.417\n[38;5;250m 5[39m   953.     5 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.411\n[38;5;250m 6[39m  [4m1[24m051.     6 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.431\n[38;5;250m 7[39m   980.     7 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.417\n[38;5;250m 8[39m   965.     8 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.414\n",
        "[38;5;250m 9[39m   912.     9 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.403\n[38;5;250m10[39m   965.    10 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.414\n[38;5;246m# â€¦ with 262 more rows[39m\n",
        "> ",
        "centre",
        "[38;5;246m# A tibble: 2,880 x 10[39m\n   Date_Time           Date        Year Month  Mdate Day    Time Sensor_ID Sensor_Name   Hourly_Counts\n   [3m[38;5;246m<dttm>[39m[23m              [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m  [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<ord>[39m[23m [3m[38;5;246m<int>[39m[23m     [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m                 [3m[38;5;246m<int>[39m[23m\n[38;5;250m 1[39m 2017-01-01 [38;5;246m00:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     0        25 Melbourne Coâ€¦          [4m2[24m930\n",
        "[38;5;250m 2[39m 2017-01-01 [38;5;246m01:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     1        25 Melbourne Coâ€¦          [4m1[24m629\n[38;5;250m 3[39m 2017-01-01 [38;5;246m02:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     2        25 Melbourne Coâ€¦           550\n[38;5;250m 4[39m 2017-01-01 [38;5;246m03:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     3        25 Melbourne Coâ€¦           301\n[38;5;250m 5[39m 2017-01-01 [38;5;246m04:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     4        25 Melbourne Coâ€¦            99\n",
        "[38;5;250m 6[39m 2017-01-01 [38;5;246m05:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     5        25 Melbourne Coâ€¦            68\n[38;5;250m 7[39m 2017-01-01 [38;5;246m06:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     6        25 Melbourne Coâ€¦            81\n[38;5;250m 8[39m 2017-01-01 [38;5;246m07:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     7        25 Melbourne Coâ€¦            61\n[38;5;250m 9[39m 2017-01-01 [38;5;246m08:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     8        25 Melbourne Coâ€¦           122\n",
        "[38;5;250m10[39m 2017-01-01 [38;5;246m09:00:00[39m 2017-01-01  [4m2[24m017 Januaâ€¦     1 Sundâ€¦     9        25 Melbourne Coâ€¦           252\n[38;5;246m# â€¦ with 2,870 more rows[39m\n",
        "> ",
        "df2",
        "[38;5;246m# A tibble: 272 x 7[39m\n   amount    id type     time                    date       .time .amount\n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m    [3m[38;5;246m<chr>[39m[23m                   [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m   [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m 1[39m  [4m1[24m025.     1 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.426\n[38;5;250m 2[39m  [4m1[24m001.     2 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.421\n",
        "[38;5;250m 3[39m   980.     3 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.417\n[38;5;250m 4[39m   980.     4 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.417\n[38;5;250m 5[39m   953.     5 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.411\n[38;5;250m 6[39m  [4m1[24m051.     6 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.431\n[38;5;250m 7[39m   980.     7 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.417\n[38;5;250m 8[39m   965.     8 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.414\n",
        "[38;5;250m 9[39m   912.     9 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.403\n[38;5;250m10[39m   965.    10 time_out 2019-08-15T13:40:00.000 2019-08-15    [31mNA[39m   0.414\n[38;5;246m# â€¦ with 262 more rows[39m\n",
        "> ",
        "df2 <- df1 %>%",
        "+ ",
        "  frame_calendar(x = date, y = amount, date = date, calendar = \"monthly\",",
        "+ ",
        "                 scale = \"free_wday\", ncol = 4)",
        "> ",
        "df2",
        "[38;5;246m# A tibble: 272 x 7[39m\n   amount    id type     time                    date       .date .amount\n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m    [3m[38;5;246m<chr>[39m[23m                   [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m   [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m 1[39m  [4m1[24m025.     1 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.426\n[38;5;250m 2[39m  [4m1[24m001.     2 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.421\n",
        "[38;5;250m 3[39m   980.     3 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.417\n[38;5;250m 4[39m   980.     4 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.417\n[38;5;250m 5[39m   953.     5 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.411\n[38;5;250m 6[39m  [4m1[24m051.     6 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.431\n[38;5;250m 7[39m   980.     7 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.417\n[38;5;250m 8[39m   965.     8 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.414\n",
        "[38;5;250m 9[39m   912.     9 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.403\n[38;5;250m10[39m   965.    10 time_out 2019-08-15T13:40:00.000 2019-08-15 0.306   0.414\n[38;5;246m# â€¦ with 262 more rows[39m\n",
        "> ",
        "ggplot(df2, ",
        "+ ",
        "       aes(x = .date, y = .amount, group = id)) +",
        "+ ",
        "  geom_line()",
        "> ",
        "ggplot(df2, ",
        "+ ",
        "       aes(x = .date, y = .amount)) +",
        "+ ",
        "  geom_line()",
        "> ",
        "df1",
        "[38;5;246m# A tibble: 272 x 5[39m\n   amount    id type     time                    date      \n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m [3m[38;5;246m<chr>[39m[23m    [3m[38;5;246m<chr>[39m[23m                   [3m[38;5;246m<date>[39m[23m    \n[38;5;250m 1[39m  [4m1[24m025.     1 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 2[39m  [4m1[24m001.     2 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 3[39m   980.     3 time_out 2019-08-15T13:40:00.000 2019-08-15\n",
        "[38;5;250m 4[39m   980.     4 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 5[39m   953.     5 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 6[39m  [4m1[24m051.     6 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 7[39m   980.     7 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 8[39m   965.     8 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m 9[39m   912.     9 time_out 2019-08-15T13:40:00.000 2019-08-15\n[38;5;250m10[39m   965.    10 time_out 2019-08-15T13:40:00.000 2019-08-15\n",
        "[38;5;246m# â€¦ with 262 more rows[39m\n",
        "> ",
        "ggplot(df1, aes(x = time, y = amount)) +",
        "+ ",
        "  geom_line()",
        "> ",
        "ggplot(df1, aes(x = time, y = amount, group = id)) +",
        "+ ",
        "  geom_line()",
        "> ",
        "plot_df(df, max_days = 4, min_days = 2, max_amount = 500)",
        "> ",
        "p1 <- plot_df(df, max_days = 4, min_days = 2, max_amount = 500)",
        "> ",
        "p1",
        "> ",
        "max_days = 4",
        "> ",
        " min_days = 2",
        "> ",
        "max_amount = 500",
        "> ",
        "  plot_data <- df %>%",
        "+ ",
        "    dplyr::mutate(total_time = lubridate::ymd_hms(time_back) - lubridate::ymd_hms(time_out),",
        "+ ",
        "                  total_days = as.numeric(total_time) / 24) %>%",
        "+ ",
        "    dplyr::filter(total_days <= max_days,",
        "+ ",
        "                  total_days >= min_days,",
        "+ ",
        "                  amount <= max_amount)",
        "> ",
        "plot_data",
        "[38;5;246m# A tibble: 7 x 5[39m\n  time_out                time_back               amount total_time     total_days\n  [3m[38;5;246m<chr>[39m[23m                   [3m[38;5;246m<chr>[39m[23m                    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<time>[39m[23m              [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m1[39m 2019-08-17T21:20:00.000 2019-08-20T10:50:00.000   368. 61.50000 hours       2.56\n[38;5;250m2[39m 2019-08-24T21:20:00.000 2019-08-27T10:50:00.000   368. 61.50000 hours       2.56\n",
        "[38;5;250m3[39m 2019-08-29T13:40:00.000 2019-08-31T19:10:00.000   443. 53.50000 hours       2.23\n[38;5;250m4[39m 2019-08-29T13:40:00.000 2019-09-01T14:05:00.000   496. 72.41667 hours       3.02\n[38;5;250m5[39m 2019-08-31T21:20:00.000 2019-09-03T10:50:00.000   440. 61.50000 hours       2.56\n[38;5;250m6[39m 2019-09-07T21:20:00.000 2019-09-10T10:50:00.000   217. 61.50000 hours       2.56\n[38;5;250m7[39m 2019-09-08T16:20:00.000 2019-09-12T11:25:00.000   300. 91.08333 hours       3.80\n",
        "> ",
        "  plot_data",
        "[38;5;246m# A tibble: 7 x 5[39m\n  time_out                time_back               amount total_time     total_days\n  [3m[38;5;246m<chr>[39m[23m                   [3m[38;5;246m<chr>[39m[23m                    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<time>[39m[23m              [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m1[39m 2019-08-17T21:20:00.000 2019-08-20T10:50:00.000   368. 61.50000 hours       2.56\n[38;5;250m2[39m 2019-08-24T21:20:00.000 2019-08-27T10:50:00.000   368. 61.50000 hours       2.56\n",
        "[38;5;250m3[39m 2019-08-29T13:40:00.000 2019-08-31T19:10:00.000   443. 53.50000 hours       2.23\n[38;5;250m4[39m 2019-08-29T13:40:00.000 2019-09-01T14:05:00.000   496. 72.41667 hours       3.02\n[38;5;250m5[39m 2019-08-31T21:20:00.000 2019-09-03T10:50:00.000   440. 61.50000 hours       2.56\n[38;5;250m6[39m 2019-09-07T21:20:00.000 2019-09-10T10:50:00.000   217. 61.50000 hours       2.56\n[38;5;250m7[39m 2019-09-08T16:20:00.000 2019-09-12T11:25:00.000   300. 91.08333 hours       3.80\n",
        "> ",
        "  c(plot_data$time_out, plot_data$time_back)",
        " [1] \"2019-08-17T21:20:00.000\" \"2019-08-24T21:20:00.000\" \"2019-08-29T13:40:00.000\" \"2019-08-29T13:40:00.000\"\n [5] \"2019-08-31T21:20:00.000\" \"2019-09-07T21:20:00.000\" \"2019-09-08T16:20:00.000\" \"2019-08-20T10:50:00.000\"\n [9] \"2019-08-27T10:50:00.000\" \"2019-08-31T19:10:00.000\" \"2019-09-01T14:05:00.000\" \"2019-09-03T10:50:00.000\"\n[13] \"2019-09-10T10:50:00.000\" \"2019-09-12T11:25:00.000\"\n",
        "> ",
        "  range(c(plot_data$time_out, plot_data$time_back))",
        "[1] \"2019-08-17T21:20:00.000\" \"2019-09-12T11:25:00.000\"\n",
        "> ",
        "  as_date(range(c(plot_data$time_out, plot_data$time_back)))",
        "[1] \"2019-08-17\" \"2019-09-12\"\n",
        "> ",
        "  date_range <- as_date(range(c(plot_data$time_out, plot_data$time_back)))",
        "> ",
        "  seq.Date(date_range)",
        "Error in seq.Date(date_range) : 'from' must be of length 1\n",
        "> ",
        "  seq.Date(date_range[1], date_range[2])",
        "Error in seq.Date(date_range[1], date_range[2]) : \n  exactly two of 'to', 'by' and 'length.out' / 'along.with' must be specified\n",
        "> ",
        "  seq.Date(date_range[1], date_range[2], by = \"day\")",
        " [1] \"2019-08-17\" \"2019-08-18\" \"2019-08-19\" \"2019-08-20\" \"2019-08-21\" \"2019-08-22\" \"2019-08-23\" \"2019-08-24\"\n [9] \"2019-08-25\" \"2019-08-26\" \"2019-08-27\" \"2019-08-28\" \"2019-08-29\" \"2019-08-30\" \"2019-08-31\" \"2019-09-01\"\n[17] \"2019-09-02\" \"2019-09-03\" \"2019-09-04\" \"2019-09-05\" \"2019-09-06\" \"2019-09-07\" \"2019-09-08\" \"2019-09-09\"\n[25] \"2019-09-10\" \"2019-09-11\" \"2019-09-12\"\n",
        "> ",
        "  dates <- seq.Date(date_range[1], date_range[2], by = \"day\")",
        "> ",
        "  tibble::tibble(dates)",
        "[38;5;246m# A tibble: 27 x 1[39m\n   dates     \n   [3m[38;5;246m<date>[39m[23m    \n[38;5;250m 1[39m 2019-08-17\n[38;5;250m 2[39m 2019-08-18\n[38;5;250m 3[39m 2019-08-19\n[38;5;250m 4[39m 2019-08-20\n[38;5;250m 5[39m 2019-08-21\n[38;5;250m 6[39m 2019-08-22\n[38;5;250m 7[39m 2019-08-23\n[38;5;250m 8[39m 2019-08-24\n[38;5;250m 9[39m 2019-08-25\n[38;5;250m10[39m 2019-08-26\n[38;5;246m# â€¦ with 17 more rows[39m\n",
        "> ",
        "  tibble::tibble(dates) %>%",
        "+ ",
        "    dplyr::mutate(w = lubridate::wday(dates))",
        "[38;5;246m# A tibble: 27 x 2[39m\n   dates          w\n   [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m 1[39m 2019-08-17     7\n[38;5;250m 2[39m 2019-08-18     1\n[38;5;250m 3[39m 2019-08-19     2\n[38;5;250m 4[39m 2019-08-20     3\n[38;5;250m 5[39m 2019-08-21     4\n[38;5;250m 6[39m 2019-08-22     5\n[38;5;250m 7[39m 2019-08-23     6\n[38;5;250m 8[39m 2019-08-24     7\n[38;5;250m 9[39m 2019-08-25     1\n[38;5;250m10[39m 2019-08-26     2\n[38;5;246m# â€¦ with 17 more rows[39m\n",
        "> ",
        "  tibble::tibble(dates) %>%",
        "+ ",
        "    dplyr::mutate(w = lubridate::wday(dates, week_start = 1))",
        "[38;5;246m# A tibble: 27 x 2[39m\n   dates          w\n   [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m 1[39m 2019-08-17     6\n[38;5;250m 2[39m 2019-08-18     7\n[38;5;250m 3[39m 2019-08-19     1\n[38;5;250m 4[39m 2019-08-20     2\n[38;5;250m 5[39m 2019-08-21     3\n[38;5;250m 6[39m 2019-08-22     4\n[38;5;250m 7[39m 2019-08-23     5\n[38;5;250m 8[39m 2019-08-24     6\n[38;5;250m 9[39m 2019-08-25     7\n[38;5;250m10[39m 2019-08-26     1\n[38;5;246m# â€¦ with 17 more rows[39m\n",
        "> ",
        "  tibble::tibble(dates) %>%",
        "+ ",
        "    dplyr::mutate(w = lubridate::wday(dates, week_start = 1),",
        "+ ",
        "                  wend = w > 5)",
        "[38;5;246m# A tibble: 27 x 3[39m\n   dates          w wend \n   [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<lgl>[39m[23m\n[38;5;250m 1[39m 2019-08-17     6 TRUE \n[38;5;250m 2[39m 2019-08-18     7 TRUE \n[38;5;250m 3[39m 2019-08-19     1 FALSE\n[38;5;250m 4[39m 2019-08-20     2 FALSE\n[38;5;250m 5[39m 2019-08-21     3 FALSE\n[38;5;250m 6[39m 2019-08-22     4 FALSE\n[38;5;250m 7[39m 2019-08-23     5 FALSE\n[38;5;250m 8[39m 2019-08-24     6 TRUE \n[38;5;250m 9[39m 2019-08-25     7 TRUE \n",
        "[38;5;250m10[39m 2019-08-26     1 FALSE\n[38;5;246m# â€¦ with 17 more rows[39m\n",
        "> ",
        "  w_df <- tibble::tibble(dates) %>%",
        "+ ",
        "    dplyr::mutate(w = lubridate::wday(dates, week_start = 1),",
        "+ ",
        "                  wend = w > 5)",
        "> ",
        "  w_df %>% ",
        "+ ",
        "    filter(wend)",
        "[38;5;246m# A tibble: 8 x 3[39m\n  dates          w wend \n  [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<lgl>[39m[23m\n[38;5;250m1[39m 2019-08-17     6 TRUE \n[38;5;250m2[39m 2019-08-18     7 TRUE \n[38;5;250m3[39m 2019-08-24     6 TRUE \n[38;5;250m4[39m 2019-08-25     7 TRUE \n[38;5;250m5[39m 2019-08-31     6 TRUE \n[38;5;250m6[39m 2019-09-01     7 TRUE \n[38;5;250m7[39m 2019-09-07     6 TRUE \n[38;5;250m8[39m 2019-09-08     7 TRUE \n",
        "> ",
        "  w_df <- tibble::tibble(dates) %>%",
        "+ ",
        "    dplyr::mutate(wd = lubridate::wday(dates, week_start = 1),",
        "+ ",
        "                  wend = wd > 5, ",
        "+ ",
        "                  w = lubridate::isoweek(wd))",
        "Error in as.POSIXlt.numeric(x) : 'origin' must be supplied\n",
        "> ",
        "tibble::tibble(dates) %>%",
        "+ ",
        "    dplyr::mutate(wd = lubridate::wday(dates, week_start = 1),",
        "+ ",
        "                  wend = wd > 5)",
        "[38;5;246m# A tibble: 27 x 3[39m\n   dates         wd wend \n   [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<lgl>[39m[23m\n[38;5;250m 1[39m 2019-08-17     6 TRUE \n[38;5;250m 2[39m 2019-08-18     7 TRUE \n[38;5;250m 3[39m 2019-08-19     1 FALSE\n[38;5;250m 4[39m 2019-08-20     2 FALSE\n[38;5;250m 5[39m 2019-08-21     3 FALSE\n[38;5;250m 6[39m 2019-08-22     4 FALSE\n[38;5;250m 7[39m 2019-08-23     5 FALSE\n[38;5;250m 8[39m 2019-08-24     6 TRUE \n[38;5;250m 9[39m 2019-08-25     7 TRUE \n",
        "[38;5;250m10[39m 2019-08-26     1 FALSE\n[38;5;246m# â€¦ with 17 more rows[39m\n",
        "> ",
        "  w_df <- tibble::tibble(dates) %>%",
        "+ ",
        "    dplyr::mutate(wd = lubridate::wday(dates, week_start = 1),",
        "+ ",
        "                  wend = wd > 5, ",
        "+ ",
        "                  w = lubridate::isoweek(dates))",
        "> ",
        "w_df",
        "[38;5;246m# A tibble: 27 x 4[39m\n   dates         wd wend      w\n   [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<lgl>[39m[23m [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m 1[39m 2019-08-17     6 TRUE     33\n[38;5;250m 2[39m 2019-08-18     7 TRUE     33\n[38;5;250m 3[39m 2019-08-19     1 FALSE    34\n[38;5;250m 4[39m 2019-08-20     2 FALSE    34\n[38;5;250m 5[39m 2019-08-21     3 FALSE    34\n[38;5;250m 6[39m 2019-08-22     4 FALSE    34\n[38;5;250m 7[39m 2019-08-23     5 FALSE    34\n",
        "[38;5;250m 8[39m 2019-08-24     6 TRUE     34\n[38;5;250m 9[39m 2019-08-25     7 TRUE     34\n[38;5;250m10[39m 2019-08-26     1 FALSE    35\n[38;5;246m# â€¦ with 17 more rows[39m\n",
        "> ",
        "  w_df %>% ",
        "+ ",
        "    filter(wend)",
        "[38;5;246m# A tibble: 8 x 4[39m\n  dates         wd wend      w\n  [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<lgl>[39m[23m [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m1[39m 2019-08-17     6 TRUE     33\n[38;5;250m2[39m 2019-08-18     7 TRUE     33\n[38;5;250m3[39m 2019-08-24     6 TRUE     34\n[38;5;250m4[39m 2019-08-25     7 TRUE     34\n[38;5;250m5[39m 2019-08-31     6 TRUE     35\n[38;5;250m6[39m 2019-09-01     7 TRUE     35\n[38;5;250m7[39m 2019-09-07     6 TRUE     36\n",
        "[38;5;250m8[39m 2019-09-08     7 TRUE     36\n",
        "> ",
        "  w_df %>% ",
        "+ ",
        "    filter(wend) %>%",
        "+ ",
        "    spread(w, dates)",
        "[38;5;246m# A tibble: 2 x 6[39m\n     wd wend  `33`       `34`       `35`       `36`      \n  [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<lgl>[39m[23m [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<date>[39m[23m    \n[38;5;250m1[39m     6 TRUE  2019-08-17 2019-08-24 2019-08-31 2019-09-07\n[38;5;250m2[39m     7 TRUE  2019-08-18 2019-08-25 2019-09-01 2019-09-08\n",
        "> ",
        "  w_df %>% ",
        "+ ",
        "    filter(wend)",
        "[38;5;246m# A tibble: 8 x 4[39m\n  dates         wd wend      w\n  [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<lgl>[39m[23m [3m[38;5;246m<dbl>[39m[23m\n[38;5;250m1[39m 2019-08-17     6 TRUE     33\n[38;5;250m2[39m 2019-08-18     7 TRUE     33\n[38;5;250m3[39m 2019-08-24     6 TRUE     34\n[38;5;250m4[39m 2019-08-25     7 TRUE     34\n[38;5;250m5[39m 2019-08-31     6 TRUE     35\n[38;5;250m6[39m 2019-09-01     7 TRUE     35\n[38;5;250m7[39m 2019-09-07     6 TRUE     36\n",
        "[38;5;250m8[39m 2019-09-08     7 TRUE     36\n",
        "> ",
        "  w_df %>% ",
        "+ ",
        "    filter(wend) %>%",
        "+ ",
        "    spread(w, dates)",
        "[38;5;246m# A tibble: 2 x 6[39m\n     wd wend  `33`       `34`       `35`       `36`      \n  [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<lgl>[39m[23m [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<date>[39m[23m    \n[38;5;250m1[39m     6 TRUE  2019-08-17 2019-08-24 2019-08-31 2019-09-07\n[38;5;250m2[39m     7 TRUE  2019-08-18 2019-08-25 2019-09-01 2019-09-08\n",
        "> ",
        "  w_df %>% ",
        "+ ",
        "    filter(wend) %>%",
        "+ ",
        "    spread(wd, dates)",
        "[38;5;246m# A tibble: 4 x 4[39m\n  wend      w `6`        `7`       \n  [3m[38;5;246m<lgl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<date>[39m[23m    \n[38;5;250m1[39m TRUE     33 2019-08-17 2019-08-18\n[38;5;250m2[39m TRUE     34 2019-08-24 2019-08-25\n[38;5;250m3[39m TRUE     35 2019-08-31 2019-09-01\n[38;5;250m4[39m TRUE     36 2019-09-07 2019-09-08\n",
        "> ",
        "  w_df %>% ",
        "+ ",
        "    filter(wend) %>%",
        "+ ",
        "    spread(wd, dates) %>%",
        "+ ",
        "    select(sat = `6`, sun = `7`)",
        "[38;5;246m# A tibble: 4 x 2[39m\n  sat        sun       \n  [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<date>[39m[23m    \n[38;5;250m1[39m 2019-08-17 2019-08-18\n[38;5;250m2[39m 2019-08-24 2019-08-25\n[38;5;250m3[39m 2019-08-31 2019-09-01\n[38;5;250m4[39m 2019-09-07 2019-09-08\n",
        "> ",
        "  w_df <- tibble::tibble(dates) %>%",
        "+ ",
        "    dplyr::mutate(wd = lubridate::wday(dates, week_start = 1),",
        "+ ",
        "                  wend = wd > 5, ",
        "+ ",
        "                  w = lubridate::isoweek(dates)) %>% ",
        "+ ",
        "    filter(wend) %>%",
        "+ ",
        "    spread(wd, dates) %>%",
        "+ ",
        "    select(sat = `6`, sun = `7`)",
        "> ",
        "w_df",
        "[38;5;246m# A tibble: 4 x 2[39m\n  sat        sun       \n  [3m[38;5;246m<date>[39m[23m     [3m[38;5;246m<date>[39m[23m    \n[38;5;250m1[39m 2019-08-17 2019-08-18\n[38;5;250m2[39m 2019-08-24 2019-08-25\n[38;5;250m3[39m 2019-08-31 2019-09-01\n[38;5;250m4[39m 2019-09-07 2019-09-08\n",
        "> ",
        "  ggplot2::ggplot(plot_data) + ",
        "+ ",
        "    ggplot2::geom_rect(data = w_df, aes(xmin = sat, xmax = sun, ymin = -Inf, ymax = Inf))",
        "> ",
        "  ggplot2::ggplot(plot_data) + ",
        "+ ",
        "    ggplot2::geom_rect(data = w_df, aes(xmin = sat, xmax = sun, ymin = -Inf, ymax = Inf)) +",
        "+ ",
        "    ggplot2::geom_segment(ggplot2::aes(x = as.Date(time_out), ",
        "+ ",
        "                                       xend = as.Date(time_back), ",
        "+ ",
        "                                       y = amount,",
        "+ ",
        "                                       yend = amount)) +",
        "+ ",
        "    ggplot2::geom_point(ggplot2::aes(x = as.Date(time_out),",
        "+ ",
        "                                     y = amount)) +",
        "+ ",
        "    ggplot2::geom_point(ggplot2::aes(x = as.Date(time_back),",
        "+ ",
        "                                     y = amount)) +",
        "+ ",
        "    ggrepel::geom_text_repel(ggplot2::aes(x = as.Date(time_out),",
        "+ ",
        "                                          y = amount,",
        "+ ",
        "                                          label = as.character(as.Date(time_out)))) +",
        "+ ",
        "    ggplot2::scale_x_date(date_minor_breaks = \"1 day\") +",
        "+ ",
        "    ggplot2::labs(y = \"Flight Price\", x = \"\") +",
        "+ ",
        "    ggplot2::theme_minimal() ",
        "> ",
        "  ggplot2::ggplot(plot_data) + ",
        "+ ",
        "    ggplot2::geom_rect(data = w_df, aes(xmin = sat, xmax = sun, ymin = -Inf, ymax = Inf),",
        "+ ",
        "                       fill = \"lighblue\") +",
        "+ ",
        "    ggplot2::geom_segment(ggplot2::aes(x = as.Date(time_out), ",
        "+ ",
        "                                       xend = as.Date(time_back), ",
        "+ ",
        "                                       y = amount,",
        "+ ",
        "                                       yend = amount)) +",
        "+ ",
        "    ggplot2::geom_point(ggplot2::aes(x = as.Date(time_out),",
        "+ ",
        "                                     y = amount)) +",
        "+ ",
        "    ggplot2::geom_point(ggplot2::aes(x = as.Date(time_back),",
        "+ ",
        "                                     y = amount)) +",
        "+ ",
        "    ggrepel::geom_text_repel(ggplot2::aes(x = as.Date(time_out),",
        "+ ",
        "                                          y = amount,",
        "+ ",
        "                                          label = as.character(as.Date(time_out)))) +",
        "+ ",
        "    ggplot2::scale_x_date(date_minor_breaks = \"1 day\") +",
        "+ ",
        "    ggplot2::labs(y = \"Flight Price\", x = \"\") +",
        "+ ",
        "    ggplot2::theme_minimal() ",
        "Error in grDevices::col2rgb(colour, TRUE) : invalid color name 'lighblue'\n",
        "> ",
        "  ggplot2::ggplot(plot_data) + ",
        "+ ",
        "    ggplot2::geom_rect(data = w_df, aes(xmin = sat, xmax = sun, ymin = -Inf, ymax = Inf),",
        "+ ",
        "                       fill = \"lightblue\") +",
        "+ ",
        "    ggplot2::geom_segment(ggplot2::aes(x = as.Date(time_out), ",
        "+ ",
        "                                       xend = as.Date(time_back), ",
        "+ ",
        "                                       y = amount,",
        "+ ",
        "                                       yend = amount)) +",
        "+ ",
        "    ggplot2::geom_point(ggplot2::aes(x = as.Date(time_out),",
        "+ ",
        "                                     y = amount)) +",
        "+ ",
        "    ggplot2::geom_point(ggplot2::aes(x = as.Date(time_back),",
        "+ ",
        "                                     y = amount)) +",
        "+ ",
        "    ggrepel::geom_text_repel(ggplot2::aes(x = as.Date(time_out),",
        "+ ",
        "                                          y = amount,",
        "+ ",
        "                                          label = as.character(as.Date(time_out)))) +",
        "+ ",
        "    ggplot2::scale_x_date(date_minor_breaks = \"1 day\") +",
        "+ ",
        "    ggplot2::labs(y = \"Flight Price\", x = \"\") +",
        "+ ",
        "    ggplot2::theme_minimal() ",
        "> ",
        "  ggplot2::ggplot(plot_data) + ",
        "+ ",
        "    ggplot2::geom_rect(data = w_df, aes(xmin = sat, xmax = sun, ymin = -Inf, ymax = Inf),",
        "+ ",
        "                       fill = \"lightblue\", alpha = .5) +",
        "+ ",
        "    ggplot2::geom_segment(ggplot2::aes(x = as.Date(time_out), ",
        "+ ",
        "                                       xend = as.Date(time_back), ",
        "+ ",
        "                                       y = amount,",
        "+ ",
        "                                       yend = amount)) +",
        "+ ",
        "    ggplot2::geom_point(ggplot2::aes(x = as.Date(time_out),",
        "+ ",
        "                                     y = amount)) +",
        "+ ",
        "    ggplot2::geom_point(ggplot2::aes(x = as.Date(time_back),",
        "+ ",
        "                                     y = amount)) +",
        "+ ",
        "    ggrepel::geom_text_repel(ggplot2::aes(x = as.Date(time_out),",
        "+ ",
        "                                          y = amount,",
        "+ ",
        "                                          label = as.character(as.Date(time_out)))) +",
        "+ ",
        "    ggplot2::scale_x_date(date_minor_breaks = \"1 day\") +",
        "+ ",
        "    ggplot2::labs(y = \"Flight Price\", x = \"\") +",
        "+ ",
        "    ggplot2::theme_minimal() ",
        "\nRestarting R session...\n\n",
        "> ",
        "source(\"functions.R\")",
        "> ",
        "library(magrittr)",
        "> ",
        "p1 <- plot_df(df, max_days = 4, min_days = 2, max_amount = 500)",
        "Error in as_date(range(c(plot_data$time_out, plot_data$time_back))) : \n  could not find function \"as_date\"\n",
        "> ",
        "source('~/functions.R')",
        "> ",
        "p1 <- plot_df(df, max_days = 4, min_days = 2, max_amount = 500)",
        "Error in filter(., wend) : object 'wend' not found\n",
        "> ",
        "source('~/functions.R')",
        "> ",
        "source('~/functions.R')",
        "> ",
        "p1 <- plot_df(df, max_days = 4, min_days = 2, max_amount = 500)",
        "> ",
        "p1"
    ],
    "type" : [
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1
    ]
}